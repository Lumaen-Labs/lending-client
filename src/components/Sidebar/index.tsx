"use client";

import { useState, useEffect, useMemo } from "react";
import { motion } from "framer-motion";
import SplitText from "@/components/SplitText";
import { Button } from "@/components/ui/button";
import { GoPin } from "react-icons/go";
import { cn } from "@/lib/utils";
import { Connection, clusterApiUrl } from "@solana/web3.js";
import { useRouter, usePathname } from "next/navigation";
import Link from "next/link";

const PIN_KEY = "ui.sidebar.pinned";

export default function Sidebar() {
  // --- pin / expand logic ---
  const [pinned, setPinned] = useState<boolean>(() => {
    if (typeof window === "undefined") return false;
    return localStorage.getItem(PIN_KEY) === "1";
  });

  const [expanded, setExpanded] = useState<boolean>(() => {
    if (typeof window === "undefined") return false;
    return localStorage.getItem(PIN_KEY) === "1"; // start open if pinned
  });

  const router = useRouter();
  const pathname = usePathname(); // <- current url path

  useEffect(() => {
    if (typeof window === "undefined") return;
    localStorage.setItem(PIN_KEY, pinned ? "1" : "0");
    if (pinned) setExpanded(true); // pinned forces open
  }, [pinned]);

  useEffect(() => {
    const onStorage = (e: StorageEvent) => {
      if (e.key !== PIN_KEY) return;
      const val = e.newValue === "1";
      setPinned(val);
      if (val) setExpanded(true);
    };
    window.addEventListener("storage", onStorage);
    return () => window.removeEventListener("storage", onStorage);
  }, []);

  // --- Solana status block ---
  const [blockHeight, setBlockHeight] = useState<number | null>(null);
  const [status, setStatus] = useState<"idle" | "ok" | "error">("idle");

  const connection = useMemo(
    () => new Connection(clusterApiUrl("testnet"), "confirmed"),
    []
  );

  useEffect(() => {
    let alive = true;
    async function getLatestBlockHeight() {
      try {
        const height = await connection.getBlockHeight("confirmed");
        if (!alive) return;
        setBlockHeight(height);
        setStatus("ok");
      } catch (e) {
        if (!alive) return;
        setStatus("error");
        console.error("Failed to fetch Solana testnet block height:", e);
      }
    }
    getLatestBlockHeight();
    const id = setInterval(getLatestBlockHeight, 15000);
    return () => {
      alive = false;
      clearInterval(id);
    };
  }, [connection]);

  // --- Sidebar nav data ---
  const sideBaritems = [
    {
      icon: (
        <svg
          width="18"
          height="18"
          viewBox="0 0 18 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M15.75 11.9999V5.99993C15.7497 5.73688 15.6803 5.47853 15.5487 5.2508C15.417 5.02306 15.2278 4.83395 15 4.70243L9.75 1.70243C9.52197 1.57077 9.2633 1.50146 9 1.50146C8.7367 1.50146 8.47803 1.57077 8.25 1.70243L3 4.70243C2.7722 4.83395 2.58299 5.02306 2.45135 5.2508C2.31971 5.47853 2.25027 5.73688 2.25 5.99993V11.9999C2.25027 12.263 2.31971 12.5213 2.45135 12.7491C2.58299 12.9768 2.7722 13.1659 3 13.2974L8.25 16.2974C8.47803 16.4291 8.7367 16.4984 9 16.4984C9.2633 16.4984 9.52197 16.4291 9.75 16.2974L15 13.2974C15.2278 13.1659 15.417 12.9768 15.5487 12.7491C15.6803 12.5213 15.7497 12.263 15.75 11.9999Z"
            stroke="#8D8D8D"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      hoverIcon: (
        <svg
          width="16"
          height="16"
          viewBox="0 0 16 16"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M14 10.6666V5.33323C13.9998 5.09941 13.938 4.86977 13.821 4.66734C13.704 4.4649 13.5358 4.2968 13.3333 4.17989L8.66667 1.51323C8.46397 1.3962 8.23405 1.33459 8 1.33459C7.76595 1.33459 7.53603 1.3962 7.33333 1.51323L2.66667 4.17989C2.46418 4.2968 2.29599 4.4649 2.17897 4.66734C2.06196 4.86977 2.00024 5.09941 2 5.33323V10.6666C2.00024 10.9004 2.06196 11.13 2.17897 11.3325C2.29599 11.5349 2.46418 11.703 2.66667 11.8199L7.33333 14.4866C7.53603 14.6036 7.76595 14.6652 8 14.6652C8.23405 14.6652 8.46397 14.6036 8.66667 14.4866L13.3333 11.8199C13.5358 11.703 13.704 11.5349 13.821 11.3325C13.938 11.13 13.9998 10.9004 14 10.6666Z"
            stroke="#FCFCFC"
            strokeWidth="1.2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      label: "Dashboard",
      href: "/",
    },
    {
      icon: (
        <svg
          width="18"
          height="18"
          viewBox="0 0 18 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M16.3125 6.75C16.3128 6.6977 16.3057 6.64562 16.2914 6.59531L15.2824 3.06562C15.2146 2.83142 15.0728 2.62544 14.8783 2.47844C14.6838 2.33144 14.4469 2.2513 14.2031 2.25H3.79688C3.55306 2.2513 3.3162 2.33144 3.12168 2.47844C2.92715 2.62544 2.7854 2.83142 2.71758 3.06562L1.7093 6.59531C1.69477 6.64559 1.68743 6.69767 1.6875 6.75V7.875C1.6875 8.31163 1.78916 8.74226 1.98442 9.13279C2.17969 9.52332 2.4632 9.86302 2.8125 10.125V15.1875C2.8125 15.3367 2.87176 15.4798 2.97725 15.5852C3.08274 15.6907 3.22582 15.75 3.375 15.75H14.625C14.7742 15.75 14.9173 15.6907 15.0227 15.5852C15.1282 15.4798 15.1875 15.3367 15.1875 15.1875V10.125C15.5368 9.86302 15.8203 9.52332 16.0156 9.13279C16.2108 8.74226 16.3125 8.31163 16.3125 7.875V6.75ZM3.79688 3.375H14.2031L15.0061 6.1875H2.99602L3.79688 3.375ZM7.3125 7.3125H10.6875V7.875C10.6875 8.32255 10.5097 8.75178 10.1932 9.06824C9.87678 9.38471 9.44755 9.5625 9 9.5625C8.55245 9.5625 8.12323 9.38471 7.80676 9.06824C7.49029 8.75178 7.3125 8.32255 7.3125 7.875V7.3125ZM6.1875 7.3125V7.875C6.1874 8.16518 6.11247 8.45044 5.96995 8.70321C5.82743 8.95598 5.62213 9.16773 5.37389 9.31801C5.12565 9.46828 4.84285 9.552 4.55281 9.56108C4.26276 9.57016 3.97528 9.50429 3.71813 9.36984C3.679 9.33939 3.63596 9.31432 3.59016 9.29531C3.35185 9.14275 3.15573 8.93272 3.01984 8.68453C2.88395 8.43633 2.81265 8.15796 2.8125 7.875V7.3125H6.1875ZM14.0625 14.625H3.9375V10.6312C4.12268 10.6686 4.3111 10.6874 4.5 10.6875C4.93663 10.6875 5.36726 10.5858 5.75779 10.3906C6.14832 10.1953 6.48802 9.9118 6.75 9.5625C7.01198 9.9118 7.35168 10.1953 7.74221 10.3906C8.13274 10.5858 8.56337 10.6875 9 10.6875C9.43663 10.6875 9.86726 10.5858 10.2578 10.3906C10.6483 10.1953 10.988 9.9118 11.25 9.5625C11.512 9.9118 11.8517 10.1953 12.2422 10.3906C12.6327 10.5858 13.0634 10.6875 13.5 10.6875C13.6889 10.6874 13.8773 10.6686 14.0625 10.6312V14.625ZM14.4091 9.29531C14.3639 9.31436 14.3214 9.33917 14.2826 9.36914C14.0255 9.50373 13.738 9.56973 13.4479 9.56077C13.1578 9.5518 12.8749 9.46818 12.6266 9.31796C12.3783 9.16775 12.1729 8.95604 12.0303 8.70327C11.8877 8.4505 11.8127 8.16522 11.8125 7.875V7.3125H15.1875V7.875C15.1873 8.15802 15.1159 8.43644 14.9799 8.68464C14.8438 8.93283 14.6476 9.14283 14.4091 9.29531Z"
            fill="#8D8D8D"
          />
        </svg>
      ),
      hoverIcon: (
        <svg
          width="18"
          height="18"
          viewBox="0 0 18 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M16.3125 6.75C16.3128 6.6977 16.3057 6.64562 16.2914 6.59531L15.2824 3.06562C15.2146 2.83142 15.0728 2.62544 14.8783 2.47844C14.6838 2.33144 14.4469 2.2513 14.2031 2.25H3.79688C3.55306 2.2513 3.3162 2.33144 3.12168 2.47844C2.92715 2.62544 2.7854 2.83142 2.71758 3.06562L1.7093 6.59531C1.69477 6.64559 1.68743 6.69767 1.6875 6.75V7.875C1.6875 8.31163 1.78916 8.74226 1.98442 9.13279C2.17969 9.52332 2.4632 9.86302 2.8125 10.125V15.1875C2.8125 15.3367 2.87176 15.4798 2.97725 15.5852C3.08274 15.6907 3.22582 15.75 3.375 15.75H14.625C14.7742 15.75 14.9173 15.6907 15.0227 15.5852C15.1282 15.4798 15.1875 15.3367 15.1875 15.1875V10.125C15.5368 9.86302 15.8203 9.52332 16.0156 9.13279C16.2108 8.74226 16.3125 8.31163 16.3125 7.875V6.75ZM3.79688 3.375H14.2031L15.0061 6.1875H2.99602L3.79688 3.375ZM7.3125 7.3125H10.6875V7.875C10.6875 8.32255 10.5097 8.75178 10.1932 9.06824C9.87678 9.38471 9.44755 9.5625 9 9.5625C8.55245 9.5625 8.12323 9.38471 7.80676 9.06824C7.49029 8.75178 7.3125 8.32255 7.3125 7.875V7.3125ZM6.1875 7.3125V7.875C6.1874 8.16518 6.11247 8.45044 5.96995 8.70321C5.82743 8.95598 5.62213 9.16773 5.37389 9.31801C5.12565 9.46828 4.84285 9.552 4.55281 9.56108C4.26276 9.57016 3.97528 9.50429 3.71813 9.36984C3.679 9.33939 3.63596 9.31432 3.59016 9.29531C3.35185 9.14275 3.15573 8.93272 3.01984 8.68453C2.88395 8.43633 2.81265 8.15796 2.8125 7.875V7.3125H6.1875ZM14.0625 14.625H3.9375V10.6312C4.12268 10.6686 4.3111 10.6874 4.5 10.6875C4.93663 10.6875 5.36726 10.5858 5.75779 10.3906C6.14832 10.1953 6.48802 9.9118 6.75 9.5625C7.01198 9.9118 7.35168 10.1953 7.74221 10.3906C8.13274 10.5858 8.56337 10.6875 9 10.6875C9.43663 10.6875 9.86726 10.5858 10.2578 10.3906C10.6483 10.1953 10.988 9.9118 11.25 9.5625C11.512 9.9118 11.8517 10.1953 12.2422 10.3906C12.6327 10.5858 13.0634 10.6875 13.5 10.6875C13.6889 10.6874 13.8773 10.6686 14.0625 10.6312V14.625ZM14.4091 9.29531C14.3639 9.31436 14.3214 9.33917 14.2826 9.36914C14.0255 9.50373 13.738 9.56973 13.4479 9.56077C13.1578 9.5518 12.8749 9.46818 12.6266 9.31796C12.3783 9.16775 12.1729 8.95604 12.0303 8.70327C11.8877 8.4505 11.8127 8.16522 11.8125 7.875V7.3125H15.1875V7.875C15.1873 8.15802 15.1159 8.43644 14.9799 8.68464C14.8438 8.93283 14.6476 9.14283 14.4091 9.29531Z"
            fill="#FCFCFC"
          />
        </svg>
      ),
      label: "Markets",
      href: "/markets",
    },
    {
      icon: (
        <svg
          width="18"
          height="18"
          viewBox="0 0 18 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M14.25 2.25H3.75C2.92157 2.25 2.25 2.92157 2.25 3.75V14.25C2.25 15.0784 2.92157 15.75 3.75 15.75H14.25C15.0784 15.75 15.75 15.0784 15.75 14.25V3.75C15.75 2.92157 15.0784 2.25 14.25 2.25Z"
            stroke="#8D8D8D"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M5.625 6C5.83211 6 6 5.83211 6 5.625C6 5.41789 5.83211 5.25 5.625 5.25C5.41789 5.25 5.25 5.41789 5.25 5.625C5.25 5.83211 5.41789 6 5.625 6Z"
            fill="#8D8D8D"
            stroke="#8D8D8D"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M5.92502 5.92493L7.95002 7.94993"
            stroke="#8D8D8D"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M12.375 6C12.5821 6 12.75 5.83211 12.75 5.625C12.75 5.41789 12.5821 5.25 12.375 5.25C12.1679 5.25 12 5.41789 12 5.625C12 5.83211 12.1679 6 12.375 6Z"
            fill="#8D8D8D"
            stroke="#8D8D8D"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M10.05 7.94993L12.075 5.92493"
            stroke="#8D8D8D"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M5.625 12.75C5.83211 12.75 6 12.5821 6 12.375C6 12.1679 5.83211 12 5.625 12C5.41789 12 5.25 12.1679 5.25 12.375C5.25 12.5821 5.41789 12.75 5.625 12.75Z"
            fill="#8D8D8D"
            stroke="#8D8D8D"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M5.92502 12.0749L7.95002 10.0499"
            stroke="#8D8D8D"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M12.375 12.75C12.5821 12.75 12.75 12.5821 12.75 12.375C12.75 12.1679 12.5821 12 12.375 12C12.1679 12 12 12.1679 12 12.375C12 12.5821 12.1679 12.75 12.375 12.75Z"
            fill="#8D8D8D"
            stroke="#8D8D8D"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M10.05 10.0499L12.075 12.0749"
            stroke="#8D8D8D"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M9 10.5C9.82843 10.5 10.5 9.82843 10.5 9C10.5 8.17157 9.82843 7.5 9 7.5C8.17157 7.5 7.5 8.17157 7.5 9C7.5 9.82843 8.17157 10.5 9 10.5Z"
            stroke="#8D8D8D"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      hoverIcon: (
        <svg
          width="18"
          height="18"
          viewBox="0 0 18 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M14.25 2.25H3.75C2.92157 2.25 2.25 2.92157 2.25 3.75V14.25C2.25 15.0784 2.92157 15.75 3.75 15.75H14.25C15.0784 15.75 15.75 15.0784 15.75 14.25V3.75C15.75 2.92157 15.0784 2.25 14.25 2.25Z"
            stroke="#FCFCFC"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M5.625 6C5.83211 6 6 5.83211 6 5.625C6 5.41789 5.83211 5.25 5.625 5.25C5.41789 5.25 5.25 5.41789 5.25 5.625C5.25 5.83211 5.41789 6 5.625 6Z"
            fill="#FCFCFC"
            stroke="#FCFCFC"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M5.92505 5.92493L7.95005 7.94993"
            stroke="#FCFCFC"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M12.375 6C12.5821 6 12.75 5.83211 12.75 5.625C12.75 5.41789 12.5821 5.25 12.375 5.25C12.1679 5.25 12 5.41789 12 5.625C12 5.83211 12.1679 6 12.375 6Z"
            fill="#FCFCFC"
            stroke="#FCFCFC"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M10.05 7.94993L12.075 5.92493"
            stroke="#FCFCFC"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M5.625 12.75C5.83211 12.75 6 12.5821 6 12.375C6 12.1679 5.83211 12 5.625 12C5.41789 12 5.25 12.1679 5.25 12.375C5.25 12.5821 5.41789 12.75 5.625 12.75Z"
            fill="#FCFCFC"
            stroke="#FCFCFC"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M5.92505 12.0749L7.95005 10.0499"
            stroke="#FCFCFC"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M12.375 12.75C12.5821 12.75 12.75 12.5821 12.75 12.375C12.75 12.1679 12.5821 12 12.375 12C12.1679 12 12 12.1679 12 12.375C12 12.5821 12.1679 12.75 12.375 12.75Z"
            fill="#FCFCFC"
            stroke="#FCFCFC"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M10.05 10.0499L12.075 12.0749"
            stroke="#FCFCFC"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M9 10.5C9.82843 10.5 10.5 9.82843 10.5 9C10.5 8.17157 9.82843 7.5 9 7.5C8.17157 7.5 7.5 8.17157 7.5 9C7.5 9.82843 8.17157 10.5 9 10.5Z"
            stroke="#FCFCFC"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      label: "Farm (50x)",
      href: "/strategic-vaults",
    },
    {
      icon: (
        <svg
          width="18"
          height="18"
          viewBox="0 0 18 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M5.625 2.8125C5.06874 2.8125 4.52497 2.97745 4.06246 3.28649C3.59995 3.59553 3.23946 4.03479 3.02659 4.5487C2.81372 5.06262 2.75802 5.62812 2.86654 6.17369C2.97506 6.71926 3.24293 7.2204 3.63626 7.61374C4.0296 8.00707 4.53074 8.27494 5.07631 8.38346C5.62188 8.49198 6.18738 8.43628 6.7013 8.22341C7.21522 8.01054 7.65447 7.65006 7.96351 7.18754C8.27255 6.72503 8.4375 6.18126 8.4375 5.625C8.4375 4.87908 8.14118 4.16371 7.61374 3.63626C7.08629 3.10882 6.37092 2.8125 5.625 2.8125ZM5.625 7.3125C5.29125 7.3125 4.96498 7.21353 4.68748 7.02811C4.40997 6.84268 4.19368 6.57913 4.06595 6.27078C3.93823 5.96243 3.90481 5.62313 3.96993 5.29579C4.03504 4.96844 4.19576 4.66776 4.43176 4.43176C4.66776 4.19576 4.96844 4.03504 5.29579 3.96993C5.62313 3.90481 5.96243 3.93823 6.27078 4.06595C6.57913 4.19368 6.84268 4.40997 7.02811 4.68748C7.21353 4.96498 7.3125 5.29125 7.3125 5.625C7.3125 6.07255 7.13471 6.50178 6.81824 6.81824C6.50178 7.13471 6.07255 7.3125 5.625 7.3125ZM12.375 8.4375C12.9313 8.4375 13.475 8.27255 13.9375 7.96351C14.4001 7.65447 14.7605 7.21522 14.9734 6.7013C15.1863 6.18738 15.242 5.62188 15.1335 5.07631C15.0249 4.53074 14.7571 4.0296 14.3637 3.63626C13.9704 3.24293 13.4693 2.97506 12.9237 2.86654C12.3781 2.75802 11.8126 2.81372 11.2987 3.02659C10.7848 3.23946 10.3455 3.59995 10.0365 4.06246C9.72745 4.52497 9.5625 5.06874 9.5625 5.625C9.5625 6.37092 9.85882 7.08629 10.3863 7.61374C10.9137 8.14118 11.6291 8.4375 12.375 8.4375ZM12.375 3.9375C12.7088 3.9375 13.035 4.03647 13.3125 4.2219C13.59 4.40732 13.8063 4.67087 13.934 4.97922C14.0618 5.28757 14.0952 5.62687 14.0301 5.95422C13.965 6.28156 13.8042 6.58224 13.5682 6.81824C13.3322 7.05425 13.0316 7.21496 12.7042 7.28008C12.3769 7.34519 12.0376 7.31177 11.7292 7.18405C11.4209 7.05633 11.1573 6.84003 10.9719 6.56253C10.7865 6.28502 10.6875 5.95876 10.6875 5.625C10.6875 5.17745 10.8653 4.74823 11.1818 4.43176C11.4982 4.11529 11.9274 3.9375 12.375 3.9375ZM5.625 9.5625C5.06874 9.5625 4.52497 9.72745 4.06246 10.0365C3.59995 10.3455 3.23946 10.7848 3.02659 11.2987C2.81372 11.8126 2.75802 12.3781 2.86654 12.9237C2.97506 13.4693 3.24293 13.9704 3.63626 14.3637C4.0296 14.7571 4.53074 15.0249 5.07631 15.1335C5.62188 15.242 6.18738 15.1863 6.7013 14.9734C7.21522 14.7605 7.65447 14.4001 7.96351 13.9375C8.27255 13.475 8.4375 12.9313 8.4375 12.375C8.4375 11.6291 8.14118 10.9137 7.61374 10.3863C7.08629 9.85882 6.37092 9.5625 5.625 9.5625ZM5.625 14.0625C5.29125 14.0625 4.96498 13.9635 4.68748 13.7781C4.40997 13.5927 4.19368 13.3291 4.06595 13.0208C3.93823 12.7124 3.90481 12.3731 3.96993 12.0458C4.03504 11.7184 4.19576 11.4178 4.43176 11.1818C4.66776 10.9458 4.96844 10.785 5.29579 10.7199C5.62313 10.6548 5.96243 10.6882 6.27078 10.816C6.57913 10.9437 6.84268 11.16 7.02811 11.4375C7.21353 11.715 7.3125 12.0412 7.3125 12.375C7.3125 12.8226 7.13471 13.2518 6.81824 13.5682C6.50178 13.8847 6.07255 14.0625 5.625 14.0625ZM12.375 9.5625C11.8187 9.5625 11.275 9.72745 10.8125 10.0365C10.3499 10.3455 9.98946 10.7848 9.77659 11.2987C9.56372 11.8126 9.50802 12.3781 9.61654 12.9237C9.72506 13.4693 9.99293 13.9704 10.3863 14.3637C10.7796 14.7571 11.2807 15.0249 11.8263 15.1335C12.3719 15.242 12.9374 15.1863 13.4513 14.9734C13.9652 14.7605 14.4045 14.4001 14.7135 13.9375C15.0226 13.475 15.1875 12.9313 15.1875 12.375C15.1875 11.6291 14.8912 10.9137 14.3637 10.3863C13.8363 9.85882 13.1209 9.5625 12.375 9.5625ZM12.375 14.0625C12.0412 14.0625 11.715 13.9635 11.4375 13.7781C11.16 13.5927 10.9437 13.3291 10.816 13.0208C10.6882 12.7124 10.6548 12.3731 10.7199 12.0458C10.785 11.7184 10.9458 11.4178 11.1818 11.1818C11.4178 10.9458 11.7184 10.785 12.0458 10.7199C12.3731 10.6548 12.7124 10.6882 13.0208 10.816C13.3291 10.9437 13.5927 11.16 13.7781 11.4375C13.9635 11.715 14.0625 12.0412 14.0625 12.375C14.0625 12.8226 13.8847 13.2518 13.5682 13.5682C13.2518 13.8847 12.8226 14.0625 12.375 14.0625Z"
            fill="#8D8D8D"
          />
        </svg>
      ),
      hoverIcon: (
        <svg
          width="18"
          height="18"
          viewBox="0 0 18 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M5.625 2.8125C5.06874 2.8125 4.52497 2.97745 4.06246 3.28649C3.59995 3.59553 3.23946 4.03479 3.02659 4.5487C2.81372 5.06262 2.75802 5.62812 2.86654 6.17369C2.97506 6.71926 3.24293 7.2204 3.63626 7.61374C4.0296 8.00707 4.53074 8.27494 5.07631 8.38346C5.62188 8.49198 6.18738 8.43628 6.7013 8.22341C7.21522 8.01054 7.65447 7.65006 7.96351 7.18754C8.27255 6.72503 8.4375 6.18126 8.4375 5.625C8.4375 4.87908 8.14118 4.16371 7.61374 3.63626C7.08629 3.10882 6.37092 2.8125 5.625 2.8125ZM5.625 7.3125C5.29125 7.3125 4.96498 7.21353 4.68748 7.02811C4.40997 6.84268 4.19368 6.57913 4.06595 6.27078C3.93823 5.96243 3.90481 5.62313 3.96993 5.29579C4.03504 4.96844 4.19576 4.66776 4.43176 4.43176C4.66776 4.19576 4.96844 4.03504 5.29579 3.96993C5.62313 3.90481 5.96243 3.93823 6.27078 4.06595C6.57913 4.19368 6.84268 4.40997 7.02811 4.68748C7.21353 4.96498 7.3125 5.29125 7.3125 5.625C7.3125 6.07255 7.13471 6.50178 6.81824 6.81824C6.50178 7.13471 6.07255 7.3125 5.625 7.3125ZM12.375 8.4375C12.9313 8.4375 13.475 8.27255 13.9375 7.96351C14.4001 7.65447 14.7605 7.21522 14.9734 6.7013C15.1863 6.18738 15.242 5.62188 15.1335 5.07631C15.0249 4.53074 14.7571 4.0296 14.3637 3.63626C13.9704 3.24293 13.4693 2.97506 12.9237 2.86654C12.3781 2.75802 11.8126 2.81372 11.2987 3.02659C10.7848 3.23946 10.3455 3.59995 10.0365 4.06246C9.72745 4.52497 9.5625 5.06874 9.5625 5.625C9.5625 6.37092 9.85882 7.08629 10.3863 7.61374C10.9137 8.14118 11.6291 8.4375 12.375 8.4375ZM12.375 3.9375C12.7088 3.9375 13.035 4.03647 13.3125 4.2219C13.59 4.40732 13.8063 4.67087 13.934 4.97922C14.0618 5.28757 14.0952 5.62687 14.0301 5.95422C13.965 6.28156 13.8042 6.58224 13.5682 6.81824C13.3322 7.05425 13.0316 7.21496 12.7042 7.28008C12.3769 7.34519 12.0376 7.31177 11.7292 7.18405C11.4209 7.05633 11.1573 6.84003 10.9719 6.56253C10.7865 6.28502 10.6875 5.95876 10.6875 5.625C10.6875 5.17745 10.8653 4.74823 11.1818 4.43176C11.4982 4.11529 11.9274 3.9375 12.375 3.9375ZM5.625 9.5625C5.06874 9.5625 4.52497 9.72745 4.06246 10.0365C3.59995 10.3455 3.23946 10.7848 3.02659 11.2987C2.81372 11.8126 2.75802 12.3781 2.86654 12.9237C2.97506 13.4693 3.24293 13.9704 3.63626 14.3637C4.0296 14.7571 4.53074 15.0249 5.07631 15.1335C5.62188 15.242 6.18738 15.1863 6.7013 14.9734C7.21522 14.7605 7.65447 14.4001 7.96351 13.9375C8.27255 13.475 8.4375 12.9313 8.4375 12.375C8.4375 11.6291 8.14118 10.9137 7.61374 10.3863C7.08629 9.85882 6.37092 9.5625 5.625 9.5625ZM5.625 14.0625C5.29125 14.0625 4.96498 13.9635 4.68748 13.7781C4.40997 13.5927 4.19368 13.3291 4.06595 13.0208C3.93823 12.7124 3.90481 12.3731 3.96993 12.0458C4.03504 11.7184 4.19576 11.4178 4.43176 11.1818C4.66776 10.9458 4.96844 10.785 5.29579 10.7199C5.62313 10.6548 5.96243 10.6882 6.27078 10.816C6.57913 10.9437 6.84268 11.16 7.02811 11.4375C7.21353 11.715 7.3125 12.0412 7.3125 12.375C7.3125 12.8226 7.13471 13.2518 6.81824 13.5682C6.50178 13.8847 6.07255 14.0625 5.625 14.0625ZM12.375 9.5625C11.8187 9.5625 11.275 9.72745 10.8125 10.0365C10.3499 10.3455 9.98946 10.7848 9.77659 11.2987C9.56372 11.8126 9.50802 12.3781 9.61654 12.9237C9.72506 13.4693 9.99293 13.9704 10.3863 14.3637C10.7796 14.7571 11.2807 15.0249 11.8263 15.1335C12.3719 15.242 12.9374 15.1863 13.4513 14.9734C13.9652 14.7605 14.4045 14.4001 14.7135 13.9375C15.0226 13.475 15.1875 12.9313 15.1875 12.375C15.1875 11.6291 14.8912 10.9137 14.3637 10.3863C13.8363 9.85882 13.1209 9.5625 12.375 9.5625ZM12.375 14.0625C12.0412 14.0625 11.715 13.9635 11.4375 13.7781C11.16 13.5927 10.9437 13.3291 10.816 13.0208C10.6882 12.7124 10.6548 12.3731 10.7199 12.0458C10.785 11.7184 10.9458 11.4178 11.1818 11.1818C11.4178 10.9458 11.7184 10.785 12.0458 10.7199C12.3731 10.6548 12.7124 10.6882 13.0208 10.816C13.3291 10.9437 13.5927 11.16 13.7781 11.4375C13.9635 11.715 14.0625 12.0412 14.0625 12.375C14.0625 12.8226 13.8847 13.2518 13.5682 13.5682C13.2518 13.8847 12.8226 14.0625 12.375 14.0625Z"
            fill="#FCFCFC"
          />
        </svg>
      ),
      label: "More",
      href: "/more",
    },
  ];

  // --- hover tracking for icon swap ---
  const [hoverIndex, setHoverIndex] = useState<number | null>(null);

  const dotColor =
    status === "ok" ? "#22c55e" : status === "error" ? "#ef4444" : "#eab308";

  return (
    <motion.aside
      onMouseEnter={() => !pinned && setExpanded(true)}
      onMouseLeave={() => !pinned && setExpanded(false)}
      onClick={() => {
        // clicking empty space toggles collapse only if not pinned
        if (!pinned) {
          setExpanded((e) => !e);
        }
      }}
      animate={{ width: expanded ? 220 : 72 }}
      transition={{ type: "spring", stiffness: 300, damping: 30 }}
      className={cn(
        "h-[100vh] bg-[#0D0D0D] text-white flex flex-col justify-between shadow-lg sticky top-0 left-0 border-r border-[#232323]"
      )}
    >
      <div>
        {/* Logo row */}
        <div className="flex items-center justify-between px-3 py-4">
          <motion.div
            initial={false}
            animate={{ opacity: expanded ? 1 : 0 }}
            className="font-semibold text-lg"
          >
            <div className="flex gap-0 items-center ml-3">
              {/* owl logo svg */}
              {expanded &&<svg
                width="29"
                height="29"
                viewBox="0 0 29 29"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <circle cx="14.5" cy="14.5" r="14.5" fill="#F3F1F0" />
                <path
                  d="M18.7447 4.81873C18.9316 4.7254 19.1304 4.73742 19.2681 4.77185C19.3566 4.79416 19.4286 4.85979 19.4644 4.94373C19.8221 5.78822 18.8253 6.94484 18.2535 7.43884C18.7119 8.48691 18.3351 10.2779 18.0894 11.0424C23.111 14.3904 22.3224 21.0714 21.2574 24.1508C21.2269 24.2381 21.1278 24.2784 21.0425 24.2426C14.636 21.5169 13.7248 15.0858 14.0767 12.1888C14.8683 11.7247 16.5496 10.633 16.9429 9.97791C17.178 9.58576 17.1907 9.01716 17.1275 8.51892C17.056 7.95604 16.7936 7.37334 16.2505 7.20935C16.0147 7.13837 15.7251 7.11581 15.3873 7.19373C14.323 7.43967 13.749 8.99526 13.4214 10.8783V10.8051C13.0982 8.94495 12.5323 7.40774 11.482 7.16443C11.1532 7.08856 10.8701 7.10833 10.6392 7.17615C10.0953 7.33627 9.83245 7.92004 9.76226 8.48279C9.70131 8.97256 9.71545 9.52955 9.94586 9.91443C10.334 10.5615 11.9934 11.6404 12.775 12.099C11.8755 15.2754 11.811 16.3526 13.3697 22.7142C13.3952 22.8191 13.3149 22.9229 13.2076 22.9125C10.2075 22.6127 6.4361 17.7675 8.81402 10.9662C8.57152 10.2107 8.19949 8.44187 8.65191 7.40662C8.0877 6.91868 7.10498 5.77681 7.4566 4.94275C7.49221 4.85864 7.56428 4.79301 7.65289 4.77087C7.78872 4.73727 7.98405 4.72613 8.16754 4.81775C8.49094 4.98006 9.05797 5.78852 11.0777 5.46521C11.509 5.41127 12.5812 5.30317 13.4214 5.3031V5.30994C14.2726 5.30997 15.3593 5.41939 15.7964 5.474C17.8429 5.80131 18.4171 4.98279 18.7447 4.81873Z"
                  fill="#0F0702"
                />
                <circle cx="15.123" cy="9.12906" r="0.692776" fill="#0F0702" />
                <circle cx="11.5967" cy="9.1293" r="0.692776" fill="#0F0702" />
              </svg>}

              {expanded && (
                <SplitText
                  text="OwlFi"
                  className="text-xl font-semibold text-center ml-4 text-white"
                  delay={100}
                  duration={0.6}
                  ease="power3.out"
                  splitType="chars"
                  from={{ opacity: 0, y: 40 }}
                  to={{ opacity: 1, y: 0 }}
                  threshold={0.1}
                  rootMargin="-100px"
                  textAlign="center" onLetterAnimationComplete={undefined}                />
              )}
            </div>
          </motion.div>

          {/* pin button */}
          <Button
            size="icon"
            variant="ghost"
            onClick={(e) => {
              e.stopPropagation();
              setPinned((p) => !p);
            }}
            className="text-slate-400 cursor-pointer hover:bg-slate-800 hover:text-white"
          >
            {pinned ? (
              <GoPin className="text-white" size={18} />
            ) : (
              <GoPin size={18} />
            )}
          </Button>
        </div>

        {/* Nav */}
        <nav className="space-y-2 mt-4 px-4">
          {sideBaritems.map((item, i) => {
            const isActive = item.href && pathname === item.href;
            const isHovered = hoverIndex === i;

            const showHoverIcon = isHovered || isActive;

            return (
              <button
                key={i}
                onMouseEnter={() => setHoverIndex(i)}
                onMouseLeave={() => setHoverIndex(null)}
                onClick={(e) => {
                  if(item.href==='/more'){
                    return;
                  }
                  e.stopPropagation();
                  if (item.href) router.replace(item.href);
                }}
                className={cn(
                  "flex items-center gap-2 w-full px-3 py-2 rounded-md cursor-pointer transition-colors",
                  expanded ? "justify-start" : "justify-center",
                  // base text color
                  "text-[#FCFCFC]",
                  // bg/text for hover OR active
                  (isActive || isHovered)
                    ? "bg-[#1F1F1F] text-white"
                    : "hover:bg-[#1F1F1F] hover:text-white"
                )}
              >
                <div className="bg-[#0D0D0D] p-2 rounded-md flex items-center justify-center">
                  {showHoverIcon ? item.hoverIcon : item.icon}
                </div>

                {expanded && <span>{item.label}</span>}
              </button>
            );
          })}
        </nav>
      </div>

      {/* Bottom status row */}
      <div className="px-3 py-4 border-t border-slate-800 flex items-center gap-3">
        <span
          className="pulsatingDot"
          style={{ ["--pulsating-dot" as any]: dotColor }}
          aria-label={
            status === "ok"
              ? "online"
              : status === "error"
              ? "error"
              : "loading"
          }
        />
        {expanded && (
          <Link
            href={`https://explorer.solana.com/block/${blockHeight}?cluster=testnet`}
            target="_blank"
          >
            <span className="text-sm text-slate-300 cursor-pointer hover:text-amber-400 transition-colors">
              {blockHeight ? `${blockHeight}` : "Loading…"}
            </span>
          </Link>
        )}
      </div>
    </motion.aside>
  );
}
